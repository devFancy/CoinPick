import * as WebSocket from 'ws';
import { WsType } from './interface';
export declare class UpbitWs {
    protected host: string;
    protected ws: WebSocket | undefined;
    protected _codes: string[];
    protected handlers: Map<String, Function>;
    protected objectMap: Map<String, any>;
    constructor(codes: string[], type: WsType, cb: {
        open?: any;
        close?: any;
        message?: any;
    }, opts?: {
        isOnlySnapshot: boolean;
        isOnlyRealtime: boolean;
        simpleFormat: boolean;
    });
    readonly socket: WebSocket;
    readonly codes: string[];
    close(): void;
    register(code: String, handler: (err: any, value: any) => {}): void;
    getObject(code: string): any;
    protected setObjectMap(obj: any): void;
}
