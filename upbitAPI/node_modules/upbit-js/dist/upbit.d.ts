import { OrderState } from './interface';
export default class Upbit {
    private accessKey;
    private secretKey;
    private exchange;
    private marketList;
    constructor(accessKey?: string, secretKey?: string);
    updateMarketAll(): Promise<void>;
    setAuth(accessKey: string, secretKey: string): void;
    getAccessToken(): string | undefined;
    getSecretToken(): string | undefined;
    getMarketList(): never[];
    marketAll(): Promise<any>;
    candlesMinutes(param: {
        unit: number;
        market: string;
        count?: number;
        to?: string;
    }): Promise<any>;
    candlesDays(param: {
        market: string;
        count?: number;
        to?: string;
    }): Promise<any>;
    candlesWeeks(param: {
        market: string;
        count?: number;
        to?: string;
    }): Promise<any>;
    candlesMonths(param: {
        market: string;
        count?: number;
        to?: string;
    }): Promise<any>;
    tradesTicks(param: {
        market: string;
        to: string;
        count: number;
        cursor: string;
    }): Promise<any>;
    ticker(param: {
        markets: string;
    }): Promise<any>;
    orderBook(param: {
        markets: string;
    }): Promise<any>;
    getAccounts(): Promise<any>;
    getOrdersChance(market: string): Promise<any>;
    getOrder(uuid?: string, identifier?: string): Promise<any>;
    getOrders(market: string, state?: OrderState, page?: number, orderBy?: string): Promise<any>;
    postOrders(market: string, side: string, volume: string, price: string, ordType: string): Promise<any>;
    delOrder(uuid: string): Promise<any>;
}
